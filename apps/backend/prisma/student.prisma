model Student {
    id                   String               @id
    name                 String
    password             Bytes
    encryptedUek         Bytes
    gender               Gender
    birthDate            DateTime
    enrollmentDate       DateTime
    graduationDate       DateTime?
    graduationSchool     String
    status               EnrollmentStatus
    credential           String // Serves its original purpose as "enrollment proof"
    createAt             DateTime             @default(now())
    updatedAt            DateTime             @default(now()) @updatedAt
    classId              String
    enabledNotifications NotificationOption[] @default([])
    isQuickAccessOpen    Boolean              @default(true)
    tokensValidFrom      DateTime?
    // Relations
    semesters            Semester[]
    class                SchoolClass          @relation(fields: [classId], references: [id], onDelete: Cascade)
    notifications        Notification[]
    devices              Device[]
    refreshTokens        RefreshToken[]
    disciplinaryEvents   DisciplinaryEvent[]
    ratings              Rating[]
    reports              Report[]

    @@map("Student")
}

enum Grade {
    junior1
    junior2
    junior3
    senior1
    senior2
    senior3
}

enum Gender {
    male
    female
}

enum EnrollmentStatus {
    enrolled
    suspended
    graduated
    withdraw
}

enum NotificationOption {
    scoreUpdate
    schoolBusTableUpdate
    scheduleUpdate
    rewordsUpdate
    classScheduleUpdate
    profileUpdate
}
